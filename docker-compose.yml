version: "3.9"

services:
  ollama:
    image: ollama/ollama:latest
    container_name: jm-ollama
    restart: unless-stopped
    ports:
      - "${OLLAMA_PORT:-11434}:11434"
    environment:
      OLLAMA_ORIGINS: ${OLLAMA_ORIGINS:-*}
    volumes:
      - ollama-data:/root/.ollama
    healthcheck:
      test: ["CMD-SHELL", "ollama list >/dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 60s
    networks:
      - jm-network

  db:
    image: mariadb:11
    container_name: jm-db
    restart: unless-stopped
    environment:
      MARIADB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-jm-root}
      MARIADB_DATABASE: ${DB_NAME:-jm}
      MARIADB_USER: ${DB_USER:-jm}
      MARIADB_PASSWORD: ${DB_PASSWORD:-jm}
      TZ: ${TZ:-UTC}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - db-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - jm-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: jm-backend
    depends_on:
      ollama:
        condition: service_healthy
      db:
        condition: service_healthy
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-local}
      SPRING_DATASOURCE_URL: jdbc:mariadb://db:3306/${DB_NAME:-jm}?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: ${DB_USER:-jm}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD:-jm}
      OLLAMA_API_URL: ${OLLAMA_API_URL:-http://ollama:11434}
      TZ: ${TZ:-UTC}
    working_dir: /workspace
    command: ["sh", "-c", "sed -i 's/\\r$//' mvnw && chmod +x mvnw && ./mvnw spring-boot:run"]
    volumes:
      - .:/workspace
      - maven-cache:/root/.m2
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 60s
    networks:
      - jm-network

  frontend:
    build:
      context: ./app
      dockerfile: Dockerfile
      target: development
    container_name: jm-frontend
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    environment:
      VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:8080}
      CHOKIDAR_USEPOLLING: "true"
    command: ["sh", "-c", "[ -d node_modules ] || npm ci; npm run dev -- --host 0.0.0.0 --port 5173"]
    volumes:
      - ./app:/app
      - node-modules:/app/node_modules
    networks:
      - jm-network

volumes:
  db-data:
  ollama-data:
  maven-cache:
  node-modules:

networks:
  jm-network:
    driver: bridge
