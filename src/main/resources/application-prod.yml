spring:
  application:
    name: JM
  datasource:
    #url: jdbc:mariadb://localhost:3306/jm?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    #username: 
    #password: 
    url: ${SPRING_DATASOURCE_URL:jdbc:mariadb://localhost:3306/jm?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.mariadb.jdbc.Driver
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  mail:
    host: ${SPRING_MAIL_HOST:sandbox.smtp.mailtrap.io}
    port: ${SPRING_MAIL_PORT:587}
    username: ${SPRING_MAIL_USERNAME}
    password: ${SPRING_MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  sql:
    init:
      mode: always
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger
    operationsSorter: method
    tagsSorter: alpha
google:
  cloud:
    connection-timeout: 60000
    read-timeout: 60000
    security-key-file: rising-daylight-435322-s8-c6f36cea5e36.json
    bucketName: JM-media

# API Configuration
#deepseek:
  api:
    url: https://api.deepseek.com/v1/chat/completions
    key:

# Gemini API
gemini:
  api:
    key: ${GEMINI_API_KEY:}
    url: https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent?key={apiKey}

# WhatsApp API
whatsapp:
  hug:
    token: ${WHATSAPP_HUGGINGFACE_TOKEN}
  phone:
    number:
      id: ${WHATSAPP_PHONE_NUMBER}
  api:
    base-url: https://graph.facebook.com/v22.0
    url: https://graph.facebook.com/v22.0/{phoneNumberId}/messages
    token: ${WHATSAPP_API_TOKEN:}

# Cloudflare R2 Configuration
cloudflare:
  r2:
    account-id: ${CLOUDFLARE_ACCOUNT_ID} 
    access-key-id: ${CLOUDFLARE_ACCESS_KEY_ID}
    secret-access-key: ${CLOUDFLARE_SECRET_ACCESS_KEY}
    bucket-name: ${CLOUDFLARE_BUCKET_NAME}
    public-url: https://pub-1234567890.r2.dev

ollama:
  api:
    url: http://localhost:11434

opencv:
  haarcascades-path: classpath:opencv/haarcascades/haarcascade_frontalface_alt.xml
  show-video: true

jwt:
  secret: ${JWT_SECRET}
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}

logging:
  level:
    org:
      springframework:
      security: 'DEBUG'
      web: 'DEBUG'
payments:
  stripe:
    secret-key: ${STRIPE_SECRET_KEY}
    publishable-key: ${STRIPE_PUBLISHABLE_KEY}
    webhook-secret: ${STRIPE_WEBHOOK_SECRET}
  asaas:
    api-key: ${ASAAS_API_KEY}
    pix-key: ${ASAAS_PIX_KEY}
    base-url: https://www.asaas.com/api/v3
    webhook-token: ${ASAAS_WEBHOOK_TOKEN}
email:
  from: ${EMAIL_FROM:no-reply@mailtrap.io}
  confirmation-base-url: ${EMAIL_CONFIRMATION_BASE_URL:https://app.jm.com/confirm-account}
  login-base-url: ${EMAIL_LOGIN_BASE_URL:https://app.nutrivision.ai}
  password-recovery-base-url: ${EMAIL_PASSWORD_RECOVERY_BASE_URL:https://app.nutrivision.ai/reset-password}
  default-language: ${EMAIL_DEFAULT_LANGUAGE:en-US}
