export default {
  routes: {
    dashboard: 'Dashboard',
    nutritionDashboard: 'Nutrition analytics',
    users: 'Patients',
    userRoles: 'Role management',
    accessControl: 'Access control',
    exercises: 'Exercises',
    anamnesis: 'Nutritional Anamnesis',
    diet: 'Diet Plans',
    dietNew: 'New Diet Plan',
    dietEdit: 'Edit Diet Plan',
    goals: 'Nutrition Goals',
    goalsNew: 'New Nutrition Goal',
    goalsEdit: 'Edit Nutrition Goal',
    photoEvolution: 'Photo evolution',
    whatsappNutrition: 'AI Nutrition',
    reminders: 'Reminders',
    payments: 'Payments',
    settings: 'Settings',
    profile: 'Profile',
    references: 'Reference data',
    referenceCountries: 'Countries',
    referenceAiPrompts: 'AI prompts',
    referenceExerciseReferences: 'Exercise',
    referenceCities: 'Cities',
    referenceEducationLevels: 'Education levels',
    referenceMeals: 'Meal types',
    referenceProfessions: 'Professions',
    unauthorized: 'Access denied',
  },
  pricing: {
    title: 'Choose your plan',
    subscribe: 'Subscribe Now',
  },
  register: {
    title: 'Create your account',
    subtitle: 'Youâ€™re subscribing to {plan}',
    planFallback: 'NutriVision AI',
    name: 'Full name',
    email: 'Email',
    phone: 'WhatsApp number',
    validationError: 'Please fill in all mandatory fields before continuing.',
    planRequired: 'Select a subscription plan to continue.',
    missingUserError: 'We could not confirm your account. Please refresh and try again.',
    successTitle: 'Subscription ready',
    successMessage: 'Your subscription has been activated successfully.',
    errorTitle: 'Unable to continue',
    errorMessage: 'We could not finish your subscription. Try again.',
    welcomeMessage:
      'ðŸ‘‹ Hello {name}! Welcome to NutriVision AI ðŸ¥— You can now send your meal photos here for instant nutritional insights.',
  },
  firstAccess: {
    title: 'Set your new password',
    subtitle: 'For security reasons, please create a new password before continuing.',
    current: 'Temporary password',
    new: 'New password',
    confirm: 'Confirm password',
    save: 'Save password',
    saving: 'Saving...',
    mismatch: 'Passwords do not match.',
    error: 'Failed to change password.',
  },
  settings: {
    sections: {
      profile: {
        title: 'Profile settings',
        subtitle: 'Manage personal details used in notifications and receipts.',
      },
      preferences: {
        title: 'Account preferences',
        subtitle: 'Customize language, time zone, and the alerts you receive.',
      },
    },
    common: {
      actions: {
        revert: 'Revert',
        saving: 'Saving...',
      },
    },
    profile: {
      fields: {
        firstName: {
          label: 'First name',
          placeholder: 'Your first name',
        },
        lastName: {
          label: 'Last name',
          placeholder: 'Your last name',
        },
        email: {
          label: 'Email',
        },
        phone: {
          label: 'Phone',
          placeholder: '(555) 555-5555',
        },
        document: {
          label: 'Document',
          placeholder: 'Tax ID or other document',
        },
        avatar: {
          label: 'Avatar (URL)',
          placeholder: 'https://...',
        },
        city: {
          label: 'City',
          placeholder: 'City',
        },
        state: {
          label: 'State/Province',
          placeholder: 'State or province',
        },
        postalCode: {
          label: 'ZIP/Postal code',
          placeholder: 'ZIP or postal code',
        },
        street: {
          label: 'Address',
          placeholder: 'Street, number, and complement',
        },
        country: {
          label: 'Country',
          placeholder: 'Country',
        },
        education: {
          label: 'Education level',
          placeholder: 'Select an education level',
        },
        profession: {
          label: 'Profession',
          placeholder: 'Select a profession',
        },
      },
      actions: {
        save: 'Save changes',
      },
      toast: {
        title: 'Profile updated',
        message: 'Your personal information has been saved successfully.',
      },
    },
    preferences: {
      fields: {
        language: {
          label: 'Language',
        },
        timezone: {
          label: 'Time zone',
        },
      },
      sections: {
        notifications: 'Notifications & appearance',
      },
      toggles: {
        darkMode: {
          label: 'Dark theme',
          description: 'Enable dark mode by default on all devices.',
        },
        emailNotifications: {
          label: 'Email notifications',
          description: 'Receive important alerts and updates in your inbox.',
        },
        whatsappNotifications: {
          label: 'WhatsApp notifications',
          description: 'Get urgent updates directly on WhatsApp.',
        },
        pushNotifications: {
          label: 'Push notifications',
          description: 'Show alerts in the browser or app when something new happens.',
        },
        securityAlerts: {
          label: 'Security alerts',
          description: 'Be notified whenever suspicious access is detected.',
        },
        productUpdates: {
          label: 'Product updates',
          description: 'Know when we release relevant features and integrations.',
        },
      },
      actions: {
        save: 'Save',
      },
      toast: {
        title: 'Preferences updated',
        message: 'Your personalized settings have been saved.',
      },
    },
    options: {
      languages: {
        ptBR: 'Portuguese (Brazil)',
        enUS: 'English (United States)',
        esES: 'Spanish (Spain)',
      },
      timezones: {
        americaSaoPaulo: 'America/Sao Paulo (GMT-03)',
        americaNewYork: 'America/New York (GMT-05)',
        europeLisbon: 'Europe/Lisbon (GMT+01)',
        utc: 'UTC (Coordinated Universal Time)',
      },
    },
  },
  menu: {
    title: 'Menu',
    anamnesis: 'Nutritional Anamnesis',
    diet: 'Diet Plans',
    goals: 'Nutrition Goals',
    exercises: 'Exercises',
    reference: 'Reference data',
  },
  reminders: {
    title: 'Reminders',
    subtitle: 'Stay on track with your daily goals.',
    searchPlaceholder: 'Search reminders...',
    actions: {
      new: 'New Reminder',
      edit: 'Edit reminder',
      delete: 'Delete reminder',
      test: 'Send test message',
    },
    card: {
      completedBadge: 'Completed',
      pausedBadge: 'Paused',
      completedToggle: 'Done',
      active: 'Active',
      inactive: 'Paused',
      toggleAria: 'Toggle reminder {title}',
      recipientLabel: 'Recipient',
      repeatSummary: {
        once: 'One-time reminder',
        daily: 'Daily at {time}',
        weekly: 'Weekly on {days} at {time}',
        interval: 'Every {minutes} minute(s)',
        countdown: '{remaining} send(s) left every {minutes} minute(s)',
      },
    },
    empty: {
      title: 'No reminders yet',
      subtitle: 'Create your first reminder to send automated WhatsApp nudges.',
    },
    form: {
      newTitle: 'Create reminder',
      editTitle: 'Edit reminder',
      subtitle: 'Reminders send a WhatsApp message automatically at the scheduled time.',
      close: 'Close modal',
      fields: {
        title: {
          label: 'Title',
          placeholder: 'Morning hydration',
        },
        description: {
          label: 'Description',
          placeholder: 'Send a glass of water reminder at breakfast.',
        },
        scheduledAt: {
          label: 'Date and time',
          startLabel: 'Next run (optional)',
          startPlaceholder: 'Leave blank to schedule from now.',
        },
        priority: {
          label: 'Priority',
        },
        type: {
          label: 'Type',
        },
        repeatMode: {
          label: 'Repetition',
        },
        timeOfDay: {
          label: 'Time of day',
        },
        weekdays: {
          label: 'Weekdays',
        },
        interval: {
          label: 'Interval (minutes)',
          hint: 'Minimum interval of one minute between reminders.',
        },
        count: {
          label: 'Occurrences',
        },
        target: {
          label: 'Recipient',
          placeholder: 'Select a recipient',
          searchPlaceholder: 'Search patients by name or email',
          loading: 'Loading recipients...',
        },
      },
      actions: {
        cancel: 'Cancel',
        save: 'Save',
        saving: 'Saving...',
      },
    },
    priority: {
      low: 'Low priority',
      medium: 'Medium priority',
      high: 'High priority',
    },
    types: {
      health: 'Health',
      study: 'Study',
      work: 'Work',
      meal: 'Meal',
      custom: 'Custom',
    },
    repeat: {
      modes: {
        dateTime: 'Specific date and time',
        daily: 'Daily schedule',
        weekly: 'Weekly schedule',
        interval: 'Repeating interval',
        countdown: 'Countdown',
      },
      weekdays: {
        monday: 'Mon',
        tuesday: 'Tue',
        wednesday: 'Wed',
        thursday: 'Thu',
        friday: 'Fri',
        saturday: 'Sat',
        sunday: 'Sun',
      },
    },
    notifications: {
      validationTitle: 'Missing information',
      missingTarget: 'Choose who should receive this reminder.',
      errors: {
        title: 'Add a title for the reminder.',
        dateTime: 'Inform the next run date and time.',
        time: 'Select a time of day for this reminder.',
        weekdays: 'Choose at least one weekday.',
        interval: 'Set the interval in minutes (minimum 1).',
        count: 'Inform how many times the reminder should be sent.',
      },
      test: {
        title: 'Test message sent',
        message: 'The reminder content was sent as a WhatsApp test.',
      },
      created: {
        title: 'Reminder created',
        message: 'The reminder will be sent automatically.',
      },
      updated: {
        title: 'Reminder updated',
        message: 'Changes saved successfully.',
      },
      deleted: {
        title: 'Reminder removed',
        message: 'The reminder was deleted.',
      },
      status: {
        title: 'Reminder updated',
        activated: 'Reminder activated.',
        paused: 'Reminder paused.',
        completed: 'Marked as completed.',
        reopened: 'Marked as pending.',
      },
    },
    confirmDelete: 'Do you want to delete "{title}"?',
  },
  nutritionDashboard: {
    title: 'Nutrition analytics',
    subtitle: 'Interactive insights for adherence, macros, hydration, and body composition.',
    filters: {
      dateRange: 'Date range',
      groupBy: 'Group by',
      last7Days: 'Last 7 days',
      last30Days: 'Last 30 days',
      last90Days: 'Last 90 days',
      groupByOptions: {
        day: 'Day',
        week: 'Week',
        month: 'Month',
      },
      user: 'Patient',
      allUsers: 'All patients',
    },
    actions: {
      refresh: 'Refresh',
      refreshing: 'Refreshing...',
    },
    charts: {
      goals: {
        title: 'Goals adherence',
        subtitle: 'Compare planned targets against achieved intake.',
        target: 'Target',
        achieved: 'Achieved',
      },
      macros: {
        title: 'Macros over time',
        subtitle: 'Stacked macro trends for the selected period.',
      },
      hydration: {
        title: 'Hydration vs target',
        subtitle: 'Daily water intake compared with the goal.',
        intake: 'Water intake',
        target: 'Target',
      },
      calories: {
        title: 'Calories over time',
        subtitle: 'Total energy intake for the selected range.',
      },
      foods: {
        title: 'Top consumed foods',
        subtitle: 'Most frequent foods by total quantity.',
        quantity: 'Quantity',
      },
      body: {
        title: 'Body composition',
        subtitle: 'Weight, BMI, fat %, and muscle % evolution.',
        weight: 'Weight',
        bmi: 'BMI',
        fat: 'Body fat %',
        muscle: 'Muscle %',
      },
    },
    metrics: {
      protein: 'Protein',
      carbs: 'Carbs',
      fat: 'Fat',
      water: 'Water',
      fiber: 'Fiber',
      calories: 'Calories',
      total: 'Total',
    },
    labels: {
      grams: 'Grams',
      milliliters: 'Milliliters',
      kcal: 'kcal',
      percent: 'Percent',
      percentAchieved: '% achieved',
      weightKg: 'Kilograms',
      unknown: 'Unknown',
    },
    empty: {
      default: 'No data available for the selected filters.',
    },
    messages: {
      loadFailed: 'Unable to load analytics data',
      genericError: 'Try again or adjust the filters.',
    },
  },
  exercises: {
    title: 'Exercise library',
    subtitle: 'Register and manage exercises with intensity, duration, and energy cost.',
    empty: 'No exercises found with the current filters.',
    table: {
      columns: {
        name: 'Exercise',
        user: 'User',
        intensity: 'Intensity',
        duration: 'Duration (min)',
        calories: 'Calories',
        muscleGroup: 'Muscle group',
        equipment: 'Equipment',
        createdAt: 'Created at',
      },
    },
    filters: {
      search: 'Search',
      reference: 'Reference',
      intensity: 'Intensity',
      user: 'User',
      allUsers: 'All users',
    },
    form: {
      createTitle: 'Create exercise',
      editTitle: 'Edit exercise',
      subtitle: 'Document exercise characteristics to use in training plans.',
      reference: 'Reference exercise',
      referencePlaceholder: 'Select reference exercise',
      customName: 'Custom name',
      customNamePlaceholder: 'Enter a custom exercise name',
      duration: 'Duration (minutes)',
      durationPlaceholder: 'e.g. 30',
      intensity: 'Intensity',
      intensityPlaceholder: 'Select intensity',
      calories: 'Calories burned',
      caloriesPlaceholder: 'e.g. 250',
      equipment: 'Equipment',
      equipmentPlaceholder: 'Bodyweight, dumbbells...',
      muscleGroup: 'Muscle group',
      muscleGroupPlaceholder: 'Chest, legs...',
      user: 'User',
      userPlaceholder: 'Select a user',
      notes: 'Notes',
      notesPlaceholder: 'Additional observations or coaching cues',
      validation: {
        name: 'Select a reference or provide a custom exercise name.',
        user: 'Select a user to associate with the exercise.',
      },
    },
    intensity: {
      low: 'Low',
      moderate: 'Moderate',
      high: 'High',
      extreme: 'Extreme',
    },
    notifications: {
      saved: 'Exercise saved successfully.',
      deleted: 'Exercise removed successfully.',
      confirmDelete: 'Do you want to delete the selected exercises?',
      loadUsersError: 'Unable to load users for exercise assignment.',
    },
  },
  photoEvolution: {
    title: 'Photographic Evolution',
    subtitle: 'Track physical progress over time with photos, notes, and comparisons.',
    uploadHelper: 'Select one or more photos. Additional files will generate new entries automatically.',
    actions: {
      refresh: 'Reload',
      clearFilters: 'Clear filters',
    },
    tabs: {
      gallery: 'Gallery',
      compare: 'Compare',
    },
    filters: {
      searchOwner: 'Search patient',
      user: 'Patient',
      userTab: 'User',
      allUsersTab: 'All users',
      bodyPart: 'Body part',
      allBodyParts: 'All body parts',
      noOwners: 'No patients found for the current search.',
      noUserSelected: 'Select a patient',
    },
    gallery: {
      entryHelper: 'Fill in the measurements and notes to keep every photo contextualized.',
      uploadLabel: 'Upload images',
      uploadHelper: 'Select one or more photos. Additional files will generate new entries automatically.',
      uploadIdle: 'No files selected yet.',
      uploading: '{count} file(s) uploadingâ€¦',
      uploadReady: '{count} file(s) ready to save.',
      clearForm: 'Clear Form',
      saveEvolution: 'Save Evolution',
      addNew: 'Add New',
      uploadCardTitle: 'Upload & Save evolution',
      uploadCardSubtitle: 'Attach progress photos and keep measurements aligned.',
      bodyPartChip: 'Body Part: {part}',
      angleChip: 'Angle: {angle}',
      countLabel: '{count} photo(s)',
      unknownDate: 'Date not informed',
      view: 'View',
      compare: 'Compare',
      weightChip: '{weight} kg',
      previewTitle: 'Selected photo',
    },
    form: {
      title: 'Register new progress photos',
      editTitle: 'Update progress',
      helper: 'Register one or multiple photos at once, combining anthropometric indicators, nutrition data, and images for faster tracking.',
      editHelper: 'Adjust the metrics or replace the photo for this evolution entry.',
      fields: {
        capturedAt: { label: 'Captured on' },
        bodyPart: { label: 'Body part' },
        weight: { label: 'Weight', unit: 'kg' },
        bodyFatPercentage: { label: 'Body fat', unit: '%' },
        muscleMass: { label: 'Muscle mass', unit: 'kg' },
        visceralFat: { label: 'Visceral fat', unit: '%' },
        waistCircumference: { label: 'Waist circumference', unit: 'cm' },
        hipCircumference: { label: 'Hip circumference', unit: 'cm' },
        chestCircumference: { label: 'Chest circumference', unit: 'cm' },
        leftArmCircumference: { label: 'Left arm circumference', unit: 'cm' },
        rightArmCircumference: { label: 'Right arm circumference', unit: 'cm' },
        leftThighCircumference: { label: 'Left thigh circumference', unit: 'cm' },
        rightThighCircumference: { label: 'Right thigh circumference', unit: 'cm' },
        caloricIntake: { label: 'Caloric intake', unit: 'kcal' },
        proteinIntake: { label: 'Protein intake', unit: 'g' },
        carbohydrateIntake: { label: 'Carbohydrate intake', unit: 'g' },
        fatIntake: { label: 'Fat intake', unit: 'g' },
        notes: { label: 'Observations' },
        image: {
          label: 'Progress photo',
          helper: 'Upload a JPG, PNG, or WEBP image up to 10 MB.',
          select: 'Select image',
          change: 'Change image',
          batchHelper: 'Select one or more images. Additional files will generate new cards automatically.',
          selectMultiple: 'Select image(s)',
        },
      },
      actions: {
        save: 'Save',
        update: 'Update',
        cancel: 'Cancel editing',
        addPhoto: 'Add another photo',
        saveBatch: 'Save photos',
      },
      batchEntryLabel: 'Photo {index}',
    },
    summary: {
      empty: 'No photos recorded yet',
      count: 'Total photos: {count}',
    },
    compare: {
      formTitle: 'Comparison settings',
      formSubtitle: 'Choose two photos to visualize changes by body part, angle, and date.',
      selectBodyPart: 'Select a body part',
      angle: 'Angle',
      selectAngle: 'Select an angle',
      mode: 'Comparison mode',
      modes: {
        sideBySide: 'Side-by-side',
        slider: 'Slider',
        overlay: 'Overlay',
      },
      before: 'Before (date)',
      selectBefore: 'Select the before photo',
      after: 'After (date)',
      selectAfter: 'Select the after photo',
      beforeLabel: 'Label (before)',
      afterLabel: 'Label (after)',
      update: 'Update Comparison',
      reset: 'Reset',
      recentComparisons: 'Recent comparisons',
      noRecent: 'No recent comparisons yet.',
      beforeDefault: 'Before',
      afterDefault: 'After',
      missingSelection: 'Select two different photos to compare.',
      sameSelection: 'Choose two different photos for comparison.',
      beforeChip: 'Before: {date}',
      afterChip: 'After: {date}',
      modeChip: 'Mode: {mode}',
      swap: 'Swap',
      duplicate: 'Duplicate',
      export: 'Export',
      exportMessage: 'Use the detailed comparison view to export your images.',
      suggestedPairs: 'Suggested pairs',
      noSuggestions: 'No suggestions available yet.',
      suggestionLabel: '{bodyPart} â€¢ {before} â†’ {after}',
    },
    comparison: {
      title: 'Quick comparison',
      subtitle: 'Select two photos from the same body part to compare measurements instantly.',
      reset: 'Clear comparison',
      difference: 'Difference',
      first: 'First photo',
      second: 'Second photo',
      open: 'Open detailed comparison',
      selectedCount: 'Selected photos: {count}/2',
      missingSelection: 'Select two photos to open the detailed comparison.',
      goBack: 'Back to photo records',
      fullTitle: 'Detailed comparison',
      fullSubtitle: 'View both photos side by side and analyze measurement changes.',
      mismatch: 'Select two photos from the same body part to continue.',
    },
    notifications: {
      successTitle: 'All set!',
      warningTitle: 'Check the information',
      errorTitle: 'Unable to complete action',
      created: 'Photo evolution entry saved successfully.',
      bulkCreated: '{count} photo evolution entries saved successfully.',
      updated: 'Photo evolution entry updated successfully.',
      deleted: 'Photo evolution entry removed.',
      invalidImage: 'Select or upload a photo before saving the entry.',
      comparisonMismatch: 'Select photos from the same body part to compare.',
      formMissingUser: 'Choose a patient to continue.',
      saveFailed: 'We could not save the entry. Please try again.',
      ownersLoadFailed: 'We were unable to load the list of patients.',
      loadFailed: 'We could not load the evolution entries. Try again in a few moments.',
      confirmDelete: 'Do you really want to delete this photo evolution entry?',
    },
    table: {
      sectionTitle: 'Photos for {part}',
      count: '{count} entries',
    },
    card: {
      noMetrics: 'No metrics available',
    },
    empty: {
      title: 'No photographic evolution yet',
      subtitle: 'Start by registering a new progress photo to unlock comparisons and history.',
    },
    angles: {
      FRONT: 'Front',
      BACK: 'Back',
      LEFT: 'Left',
      RIGHT: 'Right',
      SIDE: 'Side',
      THREE_QUARTER: 'Three-quarter',
      UNKNOWN: 'Angle not informed',
    },
    bodyParts: {
      FRONT: 'Front',
      BACK: 'Back',
      LEFT_SIDE: 'Left side',
      RIGHT_SIDE: 'Right side',
      ABDOMEN: 'Abdomen',
      ARMS: 'Arms',
      LEGS: 'Legs',
      SHOULDERS: 'Shoulders',
      FULL_BODY: 'Full body',
      UNKNOWN: 'Body part not informed',
    },
  },
  goals: {
    title: 'Nutrition Goals',
    description: 'Define and monitor personalized nutrition targets for your patients.',
    new: 'New',
    edit: 'Edit',
    save: 'Save',
    deleted: 'Goal removed successfully',
    type: 'Goal Type',
    unit: 'Unit',
    value: 'Target Value',
    periodicity: 'Periodicity',
    perKg: 'Per Kg',
    absolute: 'Absolute',
    validation: {
      required: 'Please fill all required fields',
    },
    status: {
      active: 'Active',
      inactive: 'Inactive',
      all: 'All',
    },
    types: {
      PROTEIN: 'Protein',
      CARBOHYDRATE: 'Carbohydrates',
      FAT: 'Fat',
      WATER: 'Water',
      FIBER: 'Fiber',
      ENERGY: 'Calories',
      MICRONUTRIENTS: 'Micronutrients',
      OTHER: 'Other',
    },
    periodicityOptions: {
      DAILY: 'Daily',
      WEEKLY: 'Weekly',
      MONTHLY: 'Monthly',
      CUSTOM: 'Custom',
    },
    targetMode: {
      ABSOLUTE: 'Absolute',
      PER_KG: 'Per Kg',
    },
    list: {
      empty: 'No nutrition goals were found with the selected filters.',
      filters: {
        type: 'Type',
        periodicity: 'Periodicity',
        status: 'Status',
      },
      columns: {
        type: 'Type',
        unit: 'Unit',
        target: 'Target',
        periodicity: 'Periodicity',
        active: 'Active',
        owner: 'User',
      },
      confirmDelete: {
        title: 'Remove goal',
        message: 'Are you sure you want to delete this nutrition goal? This action cannot be undone.',
      },
    },
    wizard: {
      description: 'Build custom nutrition targets to guide daily and weekly habits.',
      fields: {
        owner: 'User',
        ownerPlaceholder: 'Select a patient',
        template: 'Template',
        templatePlaceholder: 'Choose a template (optional)',
        mode: 'Target mode',
        startDate: 'Start date',
        endDate: 'End date',
        notes: 'Notes',
        active: 'Active goal',
        customDays: 'Custom days',
      },
      steps: {
        type: {
          title: 'Goal type',
          description: 'Choose the goal focus and optional template.',
        },
        target: {
          title: 'Target details',
          description: 'Select the unit and desired target value.',
        },
        periodicity: {
          title: 'Periodicity',
          description: 'Define how often this goal should be achieved.',
        },
        summary: {
          title: 'Summary',
          description: 'Review information before saving.',
        },
      },
      actions: {
        searchOwner: 'Search',
        clearTemplate: 'Clear template',
      },
      review: {
        title: 'Review goal',
        owner: 'Owner',
        period: 'Periodicity',
        duration: 'Duration',
        template: 'Template',
        active: 'Active',
      },
      notifications: {
        saved: 'Nutrition goal saved successfully.',
      },
    },
  },
  auth: {
    invalid: 'Invalid credentials.',
    expired: 'Session expired. Please log in again.',
    accessDeniedTitle: 'You do not have access',
    accessDeniedMessage: 'Your account lacks the permission required to open this area. Please contact an administrator.',
  },
  roles: {
    title: 'Role Management',
    manage: 'Manage roles',
    empty: 'No roles assigned yet.',
    permissions: 'Permissions',
    noPermissions: 'No permissions available.',
  },
  accessControl: {
    title: 'Access control',
    subtitle: 'Manage actions, objects, permissions, and roles available in the platform.',
    links: {
      manageUserRoles: 'Assign roles to users',
    },
    notifications: {
      error: { title: 'Unable to complete request' },
      actions: {
        created: { title: 'Action created', message: 'The action {name} was saved successfully.' },
        updated: { title: 'Action updated', message: 'The action {name} was updated successfully.' },
        deleted: { title: 'Action removed', message: 'The action {name} was removed.' },
      },
      objects: {
        created: { title: 'Object created', message: 'The object {name} was saved successfully.' },
        updated: { title: 'Object updated', message: 'The object {name} was updated successfully.' },
        deleted: { title: 'Object removed', message: 'The object {name} was removed.' },
      },
      permissions: {
        created: { title: 'Permission created', message: 'The permission {code} was saved successfully.' },
        updated: { title: 'Permission updated', message: 'The permission {code} was updated successfully.' },
        deleted: { title: 'Permission removed', message: 'The permission {code} was removed.' },
      },
      roles: {
        created: { title: 'Role created', message: 'The role {name} was saved successfully.' },
        updated: { title: 'Role updated', message: 'The role {name} was updated successfully.' },
        deleted: { title: 'Role removed', message: 'The role {name} was removed.' },
      },
    },
    sections: {
      actions: {
        title: 'Actions',
        description: 'Define the actions that can be combined with each module.',
        empty: 'No actions registered yet.',
        columns: {
          name: 'Action',
          actions: 'Actions',
        },
        validation: {
          name: 'Inform the action name.',
        },
        confirmDelete: {
          title: 'Remove action',
          message: 'Delete the action {name}? This operation cannot be undone.',
        },
        modal: {
          createTitle: 'New action',
          editTitle: 'Edit action',
          description: 'Action names are stored in uppercase to build permission codes.',
          fields: {
            name: 'Name',
            placeholder: 'Example: CONSULTAR',
          },
        },
      },
      objects: {
        title: 'Objects',
        description: 'Register the modules or screens that compose a permission.',
        empty: 'No objects registered yet.',
        columns: {
          name: 'Object',
          description: 'Description',
          actions: 'Actions',
        },
        validation: {
          name: 'Inform the object name.',
        },
        confirmDelete: {
          title: 'Remove object',
          message: 'Delete the object {name}? This operation cannot be undone.',
        },
        modal: {
          createTitle: 'New object',
          editTitle: 'Edit object',
          description: 'Name objects with uppercase identifiers that match your permission strategy.',
          fields: {
            name: 'Name',
            placeholder: 'Example: USERS',
            description: 'Description',
            descriptionPlaceholder: 'Optional description for this object',
          },
        },
      },
      permissions: {
        title: 'Permissions',
        description: 'Combine an action with an object to create reusable permissions.',
        empty: 'No permissions registered yet.',
        columns: {
          code: 'Code',
          object: 'Object',
          action: 'Action',
          description: 'Description',
          actions: 'Actions',
        },
        validation: {
          required: 'Fill in the permission code, action, and object.',
        },
        confirmDelete: {
          title: 'Remove permission',
          message: 'Delete the permission {name}? This operation cannot be undone.',
        },
        modal: {
          createTitle: 'New permission',
          editTitle: 'Edit permission',
          description: 'Use uppercase codes such as ROLE_USERS_READ to align with the backend.',
          fields: {
            code: 'Code',
            codePlaceholder: 'Example: ROLE_USERS_READ',
            action: 'Action',
            object: 'Object',
            description: 'Description',
            descriptionPlaceholder: 'Optional description for this permission',
          },
        },
      },
      roles: {
        title: 'Roles',
        description: 'Group permissions into roles and assign them to users.',
        empty: 'No roles registered yet.',
        noPermissions: 'No permissions associated.',
        validation: {
          name: 'Inform the role name.',
        },
        confirmDelete: {
          title: 'Remove role',
          message: 'Delete the role {name}? This operation cannot be undone.',
        },
        modal: {
          createTitle: 'New role',
          editTitle: 'Edit role',
          description: 'Select the permissions that should belong to this role.',
          fields: {
            name: 'Name',
            namePlaceholder: 'Example: ADMIN',
            description: 'Description',
            descriptionPlaceholder: 'Optional description for this role',
            permissions: 'Permissions',
            permissionFallback: 'No description provided.',
            ungrouped: 'Other',
          },
        },
      },
    },
  },
  common: {
    error: 'An unexpected error occurred.',
    goBackHome: 'Back to dashboard',
    stepIndicator: 'Step {current} of {total}',
    actions: {
      back: 'Back',
      next: 'Next',
      save: 'Save',
      saving: 'Saving...',
      refresh: 'Refresh',
      loading: 'Loading...',
      create: 'Create',
      update: 'Update',
      search: 'Search',
      exportPdf: 'Export PDF',
      addExam: 'Add exam',
      addMeal: 'Add meal',
      remove: 'Remove',
      edit: 'Edit',
      view: 'View',
      cancel: 'Cancel',
      close: 'Close',
      delete: 'Delete',
    },
    adminOnly: 'Personal patient information is visible only to administrators.',
    empty: {
      exams: 'No exams added yet.',
      meals: 'No meals recorded yet.',
    },
    placeholders: {
      empty: '-',
      select: 'Select an option',
    },
    boolean: {
      yes: 'Yes',
      no: 'No',
    },
  },
  notifications: {
    validationTitle: 'Validation required',
    validation: {
      patientSelection: 'Select a patient before continuing.',
      personalName: 'Please inform the patient name.',
      personalPhone: 'Please inform the patient phone number.',
      diagnosis: 'Provide the nutritional diagnosis before saving.',
    },
    export: {
      title: 'Export coming soon',
      message: 'PDF export will be available in an upcoming release.',
    },
    success: {
      title: 'Anamnesis saved',
      message: 'Information recorded successfully.',
    },
  },
  diet: {
    title: 'Diet Plans',
    description: 'Create personalized meal schedules with ingredients and notes for each patient.',
    new: 'New Diet Plan',
    edit: 'Edit Diet Plan',
    view: 'Diet Plan Overview',
    save: 'Save',
    delete: 'Delete',
    status: {
      all: 'All',
      active: 'Active',
      inactive: 'Inactive',
    },
    list: {
      empty: 'No diet plans found.',
      filters: {
        patient: 'Patient',
        patientPlaceholder: 'Patient name',
        mealType: 'Meal type',
        status: 'Status',
      },
      columns: {
        patient: 'Patient',
        meals: 'Meals',
        updatedAt: 'Updated at',
        active: 'Active',
      },
      confirmDelete: {
        title: 'Delete diet plan',
        message: 'This diet plan will be permanently removed. This action cannot be undone.',
      },
    },
    wizard: {
      steps: {
        schedule: {
          title: 'Meal schedule',
          description: 'Define the meals and preferred times for the day.',
        },
        items: {
          title: 'Meal items',
          description: 'Add foods, units, and quantities to each meal.',
        },
        substitutions: {
          title: 'Smart substitutions',
          description: 'Discover AI-suggested swaps with similar nutrition.',
        },
        notes: {
          title: 'Notes & review',
          description: 'Write notes and review the full plan before saving.',
        },
      },
      fields: {
        owner: 'Diet owner',
        ownerPlaceholder: 'Select a patient',
        patientName: 'Patient name',
        patientPlaceholder: 'Patient or display name',
        notes: 'Notes',
        isActive: 'Diet is active',
      },
      schedule: {
        timeLabel: 'Scheduled time',
      },
      items: {
        addItem: 'Add item',
        foodLabel: 'Food',
        unitLabel: 'Unit',
        quantityLabel: 'Quantity',
        notesLabel: 'Notes',
      },
      substitutions: {
        title: 'Smart Food Substitutions',
        description: 'Based on your selected foods, here are similar nutritional options.',
        originalLabel: 'Original food',
        replace: 'Replace',
        portionLabel: '{portion}',
        calorieLabel: '{value} kcal',
        emptyState: 'Add foods to your meals to see AI-generated substitutions.',
        emptyFiltered: 'No substitutions match the selected nutrient filter yet.',
        filters: {
          label: 'Filter by nutrient',
          helper: 'Focus on the macronutrient you want to prioritize.',
          all: 'All',
          protein: 'Protein',
          carbs: 'Carbs',
          fat: 'Fat',
          fiber: 'Fiber',
        },
        macros: {
          protein: 'Protein',
          carbs: 'Carbs',
          fat: 'Fat',
          fiber: 'Fiber',
        },
      },
      review: {
        title: 'Plan summary',
        ownerLabel: 'Owner',
        patientLabel: 'Patient',
        mealCountLabel: 'Meals in plan',
        emptyItems: 'No items added yet.',
      },
      toast: {
        title: 'Diet plans',
        saved: 'Diet saved successfully.',
        deleted: 'Diet deleted successfully.',
        draftTitle: 'Draft restored',
        draftRestored: 'We recovered an unsaved diet draft.',
      },
    },
    meal: {
      breakfast: 'Breakfast',
      lunch: 'Lunch',
      snack: 'Snack',
      dinner: 'Dinner',
      supper: 'Supper',
    },
    unit: {
      gram: 'Gram',
      unit: 'Unit',
      slice: 'Slice',
      ml: 'Milliliter',
      cup: 'Cup',
      tbsp: 'Tablespoon',
    },
      validation: {
        ownerRequired: 'Please choose who owns this diet',
        atLeastOneMeal: 'Please add at least one meal',
        itemRequired: 'Please fill food, unit and quantity',
      },
  },
  payments: {
    methodSelection: {
      title: 'Payment method',
      subtitle: 'Choose how you want to charge the patient.',
      options: {
        card: {
          label: 'Card payment',
          description: 'Charge saved cards or tokenize a new one for this payment.',
        },
        pix: {
          label: 'PIX',
          description: 'Generate a PIX QR code that expires after the customer pays.',
        },
        recurring: {
          label: 'Subscription',
          description: 'Create recurring charges that bill automatically.',
        },
      },
    },
    cardBrands: {
      visa: 'Visa',
      mastercard: 'Mastercard',
      amex: 'American Express',
      americanexpress: 'American Express',
      generic: 'Card',
    },
    cardForm: {
      selectPlanTitle: 'Select a plan',
      loading: 'Loading plans...',
      noPlans: 'No plans available yet.',
      storedCardsTitle: 'Stored cards',
      cancelAddCard: 'Cancel',
      addCardButton: 'Add card',
      expires: 'Expires {month}/{year}',
      defaultBadge: 'Default',
      noCards: 'No cards saved yet.',
      tokenizationTitle: 'Tokenize a new card',
      tokenizationDescription: 'Securely save a card token for future payments.',
      fields: {
        cardholder: 'Cardholder name',
        number: 'Card number',
        expiry: 'Expiry (MM/YY)',
        cvc: 'Security code',
      },
      placeholders: {
        number: '0000 0000 0000 0000',
        expiry: 'MM/YY',
      },
      setDefault: 'Set as default',
      tokenizing: 'Tokenizing...',
      addingCard: 'Save card',
      pciNotice: 'Card data is transmitted securely via our PCI-compliant providers.',
      processing: 'Processing',
      submit: 'Create payment',
      planLoadError: 'Unable to load payment plans.',
      brandFallback: 'Card',
    },
    recurring: {
      selectPlanTitle: 'Select a subscription plan',
      selectPlanSubtitle: 'Pick the plan that best matches your goals.',
      loading: 'Loading plans...',
      noPlans: 'No subscription plans available yet.',
      chargeTimingLabel: 'Initial charge',
      chargeTimingImmediate: 'Charge immediately',
      chargeTimingLater: 'Charge on next billing date',
      selectedPlanTitle: 'Selected plan',
      selectedPlanEmpty: 'Choose a plan to continue.',
      planSelectedBadge: 'Selected',
      methodTitle: 'Payment method',
      cards: {
        title: 'Select card',
        expires: 'Expires {month}/{year}',
        defaultBadge: 'Default',
        empty: 'Add a card first to create recurring charges.',
        loading: 'Loading saved cards...',
        error: 'Unable to load saved cards.',
        ensureCustomer: 'Fill in your personal details before adding a card.',
        delete: 'Remove card',
        tokenizationError: 'Unable to tokenize this card. Please try again.',
      },
      termsNotice:
        'I confirm the customer agreed to recurring charges and understand that cancellation or refunds must follow consumer protection laws.',
      submitLoading: 'Creating...',
      submit: 'Payment',
      methods: {
        card: {
          label: 'Credit card',
          description: 'Bill the saved card for every cycle.',
        },
        pix: {
          label: 'PIX invoice',
          description: 'Generate a PIX invoice each billing cycle.',
        },
      },
      planError: 'Unable to load payment plans. Please try again later.',
    },
    pixForm: {
      title: 'Create PIX payment',
      description: 'Generate instant PIX QR codes for patients to pay.',
      amountLabel: 'Amount ({currency})',
      customerLabel: 'Asaas customer ID',
      customerPlaceholder: 'Customer identifier',
      descriptionLabel: 'Description',
      descriptionPlaceholder: 'e.g. Nutritional consultation',
      generating: 'Generating...',
      generate: 'Generate PIX',
    },
    recentActivity: {
      title: 'Recent activity',
      empty: 'No payments recorded yet.',
    },
    subscription: {
      title: 'Subscription',
      subtitle: 'Manage your active subscription.',
      statusLabel: 'Status',
      planLabel: 'Plan',
      planUnknown: 'Unknown plan',
      amountLabel: 'Amount',
      intervalLabel: 'Interval',
      nextBilling: 'Next billing date',
      cancelling: 'Cancelling...',
      cancel: 'Cancel',
      emptyTitle: 'No subscription yet',
      emptyDescription: 'You do not have any active subscription.',
      plan: 'Plan',
      amount: 'Amount',
      interval: 'Interval',
      nextBilling: 'Next billing date',
      card: 'Card',
      cancel: 'Cancel',
      details: 'Subscription details',
      manageHint: 'Need to adjust something? Update or cancel the recurring charge below.',
      recurringList: 'Recurring subscriptions',
      recentPayments: 'Recent payments',
      paymentHisotry: 'Payment history',
      paymentHisotryDescription: 'All payments made through this subscription.',
      noPayments: 'No payments made yet.',
      status: {
        active: 'Active',
        paused: 'Paused',
        cancelled: 'Cancelled',
        expired: 'Expired',
        failed: 'Failed',
      },
      interval: {
        monthly: 'Monthly',
        quarterly: 'Quarterly',
        semi_annual: 'Every six months',
        yearly: 'Yearly',
        weekly: 'Weekly',
        daily: 'Daily',
        unknown: 'Custom interval',
      },
      noNextBilling: 'No upcoming billing date.',
    },
    details: {
      title: 'Payment details',
      reference: 'Reference',
      status: 'Status',
      method: 'Method',
      amount: 'Amount',
      createdAt: 'Created at',
      metadata: 'Metadata',
    },
    refund: {
      dialogTitle: 'Confirm refund',
      confirmLabel: 'Confirm',
      confirmDefault: 'Refund selected payments?',
      confirmBulk: 'Refund {count} payments?',
      confirmSingle: 'Refund payment {id}?',
    },
    notifications: {
      cardsTitle: 'Cards',
      cardsLoadError: 'Unable to load saved cards.',
      paymentsTitle: 'Payments',
      paymentsLoadError: 'Unable to load payment history.',
      invoiceTitle: 'Invoices',
      invoiceUnavailable: 'No invoice link available for this payment.',
      subscriptionTitle: 'Subscription',
      subscriptionLoadError: 'Unable to load subscription.',
      cardTitle: 'Card payments',
      cardMissingPlan: 'Select a plan before creating the payment.',
      intentTitle: 'Payment intent',
      intentCreated: 'Intent created with status {status}.',
      intentErrorTitle: 'Payment error',
      intentError: 'Unable to create the payment intent.',
      subscriptionCancelledTitle: 'Subscription cancelled',
      subscriptionCancelledMessage: 'Recurring billing has been cancelled.',
      subscriptionCancelError: 'Unable to cancel the subscription.',
      tokenizationTitle: 'Card tokenization',
      stripeNotLoaded: 'Stripe has not finished loading yet.',
      cardSavedTitle: 'Card saved',
      cardSavedMessage: 'The card was saved successfully.',
      cardDeletedMessage: 'The card was removed successfully.',
      tokenizationFailedTitle: 'Tokenization failed',
      tokenizationFailedMessage: 'We could not tokenize this card. Try again.',
      pixTitle: 'PIX payments',
      pixMissingFields: 'Fill in amount and customer before generating.',
      pixSuccessTitle: 'PIX ready',
      pixSuccessMessage: 'Share the QR code to receive payment.',
      pixError: 'Unable to generate the PIX charge.',
      pixStatusTitle: 'PIX status',
      pixStatusError: 'Unable to refresh the PIX payment status.',
      subscriptionMissingPlan: 'Choose a plan before creating the subscription.',
      subscriptionMissingAsaas: 'Provide the Asaas customer ID for PIX subscriptions.',
      subscriptionMissingStripe: 'Select a saved card for card subscriptions.',
      subscriptionCreatedTitle: 'Subscription created',
      subscriptionCreatedMessage: 'Subscription #{id} created successfully.',
      subscriptionError: 'Unable to create the subscription.',
      refundsTitle: 'Bulk refunds',
      refundBulkMessage: 'Refunding selected payments...',
      refundTitle: 'Refund',
      refundSuccess: 'Payment refunded successfully.',
      refundError: 'Unable to process the refund.',
      exportTitle: 'Export payments',
      exportEmpty: 'There are no payments to export.',
    },
    export: {
      headers: {
        id: 'ID',
        gateway: 'Gateway ID',
        method: 'Method',
        status: 'Status',
        amount: 'Amount',
        currency: 'Currency',
        createdAt: 'Created at',
      },
    },
    timeline: {
      completed: {
        title: 'Payment completed',
        description: '{amount} received successfully.',
      },
      refunded: {
        title: 'Payment refunded',
        description: '{amount} returned to the customer.',
      },
      failed: {
        title: 'Payment failed',
        description: '{amount} could not be processed.',
      },
      processing: {
        title: 'Payment processing',
        description: '{amount} is being confirmed.',
      },
      default: {
        title: 'Payment update',
        description: '{amount} status changed.',
      },
      recurring: {
        title: 'Recurring charge created',
        description: '{amount} scheduled for upcoming cycles.',
      },
    },
    table: {
      title: 'Payments',
      subtitle: 'Monitor transactions across methods and gateways.',
      filters: {
        search: 'Search',
        searchPlaceholder: 'Payment ID, description',
        status: 'Status',
        statusAll: 'All statuses',
        method: 'Method',
        methodAll: 'Any method',
        from: 'From',
        to: 'To',
      },
      toolbar: {
        export: 'Export CSV',
        refundSelected: 'Refund selected',
        refresh: 'Sync',
      },
      actions: {
        view: 'View details',
        refund: 'Refund payment',
      },
      columns: {
        paymentId: 'Payment ID',
        description: 'Description',
        method: 'Method',
        status: 'Status',
        amount: 'Amount',
        createdAt: 'Created at',
        updatedAt: 'Updated at',
      },
    },
    history: {
      actions: {
        invoice: 'Invoice Â· View',
        details: 'Details Â· View',
      },
    },
    statuses: {
      pending: 'Pending',
      processing: 'Processing',
      completed: 'Completed',
      failed: 'Failed',
      refunded: 'Refunded',
    },
    methods: {
      credit_card: 'Credit card',
      debit_card: 'Debit card',
      pix: 'PIX',
      bank_slip: 'Bank slip',
    },
    intervals: {
      monthly: 'Billed monthly',
      quarterly: 'Billed every quarter',
      semi_annual: 'Billed every six months',
      yearly: 'Billed annually',
      weekly: 'Billed weekly',
      daily: 'Billed daily',
      unknown: 'Custom interval',
    },
  },  anamnesis: {
    title: 'Nutritional anamnesis',
    subtitle: "Complete the patient's nutritional anamnesis step by step. Progress is stored automatically.",
    summary: {
      title: 'Current anamnesis',
      newRecord: 'Start new anamnesis',
      fields: {
        patient: 'Patient',
        phone: 'Phone',
        goal: 'Consultation goal',
        diagnosis: 'Diagnosis',
        diet: 'Diet summary',
      },
      sections: {
        pathologies: 'Pathologies',
        preferences: 'Food preferences',
        diet: 'Diet summary',
      },
    },
    admin: {
      listTitle: 'Saved anamneses',
      listSubtitle: 'Select a patient to review or update their information.',
      new: 'New anamnesis',
      empty: 'No anamneses found yet.',
      columns: {
        patient: 'Patient',
        phone: 'Phone',
        goal: 'Goal',
        actions: 'Actions',
      },
    },
    notifications: {
      loadTitle: 'Unable to load anamneses',
      loadMessage: 'Check your connection and try again.',
    },
    preferences: {
      labels: {
        PREFERRED: 'Preferred foods',
        DISLIKED: 'Disliked foods',
      },
      descriptions: {
        PREFERRED: 'Add foods that the patient prefers to include in the plan.',
        DISLIKED: 'Add foods the patient wishes to avoid or limit.',
      },
      fields: {
        food: 'Food',
        notes: 'Notes',
      },
      actions: {
        add: 'Add food',
      },
      types: {
        PREFERRED: 'Preferred',
        DISLIKED: 'Disliked',
      },
      empty: 'No foods registered yet for this section.',
    },
    steps: {
      personal: {
        title: 'Personal data',
        description: 'Patient identification and demographics.',
        selectLabel: 'Select a patient',
        placeholder: 'Choose a patient',
        fields: {
          patientName: 'Patient',
          address: 'Address',
          country: 'Country',
          city: 'City',
          birthDate: 'Date of birth',
          age: 'Age',
          phoneNumber: 'Phone',
          educationLevel: 'Education level',
          profession: 'Profession',
          goal: 'Consultation goal',
        },
      },
      clinical: {
        title: 'Clinical assessment',
        description: 'Observed signs during the appointment.',
        fields: {
          mucosa: 'Mucosa',
          limbs: 'Limbs',
          surgicalHistory: 'Surgical history',
          clinicalNotes: 'Clinical notes',
        },
      },
      pathologies: {
        title: 'Pathologies',
        description: 'Select the pathologies that apply to the patient.',
        empty: 'No pathologies available for the selected language.',
      },
      bodyComposition: {
        title: 'Body composition',
        description: 'Anthropometric and bioimpedance data.',
        fields: {
          weightKg: 'Weight (kg)',
          heightCm: 'Height (cm)',
          bodyMassIndex: 'BMI',
          bodyFatPercentage: 'Body fat (%)',
          muscleMassPercentage: 'Muscle mass (%)',
          basalMetabolicRate: 'BMR',
          abdominalCircumference: 'Abdominal circumference (cm)',
          waistCircumference: 'Waist circumference (cm)',
          hipCircumference: 'Hip circumference (cm)',
          armCircumference: 'Arm circumference (cm)',
          kneeCircumference: 'Knee circumference (cm)',
          thoraxCircumference: 'Thorax circumference (cm)',
        },
      },
      biochemistry: {
        title: 'Biochemistry',
        description: 'Register laboratory results and values.',
        fields: {
          exam: 'Exam',
          unit: 'Unit',
          value: 'Result value',
          date: 'Collection date',
        },
      },
      habits: {
        title: 'Lifestyle and habits',
        description: 'Capture daily routine and lifestyle details.',
        fields: {
          mealPreparation: 'Meal preparation',
          mealLocation: 'Meal location',
          workSchedule: 'Work schedule',
          studySchedule: 'Study schedule',
          appetite: 'Appetite',
          waterIntake: 'Water intake',
          physicalActivity: 'Physical activity',
          activityFrequency: 'Activity frequency',
          activityDuration: 'Activity duration',
          smokes: 'Smokes',
          drinksAlcohol: 'Consumes alcohol',
          supplements: 'Supplements',
          sleepQuality: 'Sleep quality',
          chewingQuality: 'Chewing quality',
          habitNotes: 'Observations',
        },
      },
      preferences: {
        title: 'Food preferences',
        description: 'Record preferred and disliked foods for personalization.',
      },
      foodRecall: {
        title: '24h food recall',
        description: 'Detail the foods consumed during the previous day.',
        fields: {
          mealName: 'Meal name',
          observation: 'Notes/observation',
          food: 'Food',
          unit: 'Measurement unit',
          quantity: 'Quantity',
          addItem: 'Add food',
        },
      },
      diagnosis: {
        title: 'Diagnosis and plan',
        description: 'Summarize conclusions and the recommended plan.',
        fields: {
          diagnosis: 'Diagnosis',
          dietSummary: 'Diet summary',
        },
      },
    },
  },
  reference: {
    title: 'Reference data',
    countries: {
      title: 'Countries',
      subtitle: 'Manage the list of countries available in forms and reports.',
      columns: {
        code: 'Code',
        name: 'Name',
        nationality: 'Nationality',
        language: 'Language',
        createdAt: 'Created at',
      },
      form: {
        code: 'Country code (ISO-2)',
        name: 'Country name',
        nationality: 'Nationality',
        language: 'Language tag (optional)',
      },
      empty: 'No countries registered yet.',
      createSuccess: 'Country saved successfully.',
      deleteSuccess: 'Country removed successfully.',
      deleteQuestion: 'Are you sure you want to delete the selected countries?',
    },
    aiPrompts: {
      title: 'AI prompts',
      subtitle: 'Manage prompt templates per AI provider, model, and owner.',
      filters: {
        search: 'Search',
        searchPlaceholder: 'Search by code, name, or model',
        provider: 'Provider',
        allProviders: 'All providers',
        owner: 'Owner',
        ownerPlaceholder: 'Owner identifier (optional)',
      },
      columns: {
        code: 'Code',
        name: 'Name',
        provider: 'Provider',
        model: 'Model',
        owner: 'Owner',
        active: 'Status',
        updatedAt: 'Updated at',
      },
      form: {
        code: 'Reference code',
        name: 'Display name',
        provider: 'Provider',
        model: 'Model identifier',
        owner: 'Owner (user ID or tenant)',
        ownerHelper: 'Leave empty to make the prompt available to all owners.',
        description: 'Description',
        prompt: 'Prompt template',
        promptHelper: 'Use plain text or JSON instructions expected by the AI.',
        active: 'Active',
        activeLabel: 'Prompt enabled',
      },
      providers: {
        GEMINI: 'Gemini',
        OLLAMA: 'Ollama',
      },
      activeStatus: {
        active: 'Active',
        inactive: 'Inactive',
      },
      ownerGlobal: 'All owners',
      empty: 'No AI prompts registered yet.',
      saveSuccess: 'Prompt saved successfully.',
      deleteSuccess: 'Prompt removed successfully.',
      deleteQuestion: 'Delete the selected prompts?',
    },
    exerciseReferences: {
      title: 'Exercise catalog',
      subtitle: 'Manage the list of reference exercises available for training plans.',
      filters: {
        search: 'Search',
        searchPlaceholder: 'Search by code, name, or description',
        language: 'Language',
        languagePlaceholder: 'Language tag (optional)',
        muscleGroup: 'Muscle group',
        muscleGroupPlaceholder: 'Filter by muscle group',
        equipment: 'Equipment',
        equipmentPlaceholder: 'Filter by equipment',
      },
      columns: {
        code: 'Code',
        name: 'Name',
        muscleGroup: 'Muscle group',
        equipment: 'Equipment',
        language: 'Language',
        createdAt: 'Created at',
      },
      form: {
        code: 'Reference code',
        name: 'Exercise name',
        description: 'Description',
        muscleGroup: 'Muscle group',
        equipment: 'Equipment',
        language: 'Language tag (optional)',
        languageHelper: 'Use standard language tags such as en-US or pt-BR.',
      },
      empty: 'No reference exercises registered yet.',
      createSuccess: 'Reference exercise saved successfully.',
      deleteSuccess: 'Reference exercise removed successfully.',
      deleteQuestion: 'Are you sure you want to delete the selected reference exercises?',
    },
    cities: {
      title: 'Cities',
      subtitle: 'Maintain the list of cities associated with each country.',
      columns: {
        name: 'City',
        stateCode: 'State code',
        stateName: 'State/Province',
        country: 'Country',
        capital: 'Capital',
        timezone: 'Timezone',
      },
      form: {
        countryId: 'Country',
        name: 'City name',
        stateCode: 'State code',
        stateName: 'State name',
        cityCode: 'City code',
        timezone: 'Timezone',
        capital: 'Is capital?',
      },
      empty: 'No cities registered yet.',
      createSuccess: 'City saved successfully.',
      deleteSuccess: 'City removed successfully.',
      deleteQuestion: 'Are you sure you want to delete the selected cities?',
    },
    educationLevels: {
      title: 'Education levels',
      subtitle: 'Configure the education levels offered in user and patient forms.',
      columns: {
        code: 'Code',
        name: 'Name',
        description: 'Description',
        sortOrder: 'Order',
      },
      form: {
        code: 'Code',
        name: 'Name',
        description: 'Description',
        sortOrder: 'Display order',
      },
      empty: 'No education levels registered yet.',
      createSuccess: 'Education level saved successfully.',
      deleteSuccess: 'Education level removed successfully.',
      deleteQuestion: 'Delete the selected education levels?',
    },
    meals: {
      title: 'Meal types',
      subtitle: 'Maintain the meal list used across diets and WhatsApp entries.',
      searchPlaceholder: 'Search by name or code',
      columns: {
        code: 'Code',
        name: 'Name',
        typicalTime: 'Typical time',
        sortOrder: 'Order',
        language: 'Language',
        description: 'Description',
      },
      form: {
        code: 'Meal code',
        name: 'Meal name',
        description: 'Description',
        typicalTime: 'Typical time (HH:mm)',
        sortOrder: 'Display order',
        language: 'Language (optional)',
      },
      empty: 'No meals registered yet.',
      createTitle: 'Create meal',
      editTitle: 'Edit meal',
      createSuccess: 'Meal saved successfully.',
      deleteSuccess: 'Meal removed successfully.',
      deleteQuestion: 'Delete the selected meals?',
      deleteError: 'Unable to delete the meal.',
      saveError: 'Unable to save the meal.',
    },
    professions: {
      title: 'Professions',
      subtitle: 'Control the professions available to users and patients.',
      columns: {
        code: 'Code',
        name: 'Name',
        description: 'Description',
        language: 'Language',
      },
      form: {
        code: 'Code',
        name: 'Name',
        description: 'Description',
        language: 'Language (optional)',
      },
      empty: 'No professions registered yet.',
      createSuccess: 'Profession saved successfully.',
      deleteSuccess: 'Profession removed successfully.',
      deleteQuestion: 'Delete the selected professions?',
    },
  },
  whatsappNutrition: {
    title: 'Nutrition assistant',
    subtitle: 'Monitor WhatsApp submissions and AI-powered nutrition insights.',
    actions: {
      refresh: 'Refresh data',
      refreshing: 'Refreshing...',
      create: 'Create',
      delete: 'Delete',
      deleting: 'Deleting...',
    },
    dateNavigator: {
      previous: 'â€¹',
      next: 'â€º',
      today: 'Today',
      previousDayAria: 'View previous day',
      nextDayAria: 'View next day',
      pickDateAria: 'Choose a date',
    },
    filters: {
      client: 'Patient',
      allClients: 'All patients',
    },
    states: {
      loadingUsers: 'Loading patients...',
    },
    feed: {
      title: 'Feed',
      description: 'Latest images and messages captured from your WhatsApp bot.',
      count: '{count} items',
      loading: 'Loading feed...',
      empty: 'No WhatsApp messages processed yet.',
      selectClient: 'Select a patient to inspect their WhatsApp nutrition feed.',
      alt: 'Food image',
      textPlaceholder: 'Text',
      unknownMeal: 'Unknown meal',
      manual: 'Manual',
      edited: 'Edited',
      owner: 'Owner: {name}',
      source: 'From {phone} - {date}',
      groups: {
        unknown: 'Other meals',
      },
      macros: {
        protein: 'Protein {amount} g',
        carbs: 'Carbs {amount} g',
        fat: 'Fat {amount} g',
      },
    },
    dashboard: {
      title: 'Nutrition dashboard',
      description: 'Aggregated insights from the last analysed meals.',
      loading: 'Calculating insights...',
      metrics: {
        calories: 'Total calories',
        meals: 'Meals analysed',
      },
      macros: {
        title: 'Macronutrients',
        subtitle: 'Distribution for the analysed meals.',
        protein: 'Protein',
        carbs: 'Carbohydrates',
        fat: 'Fat',
        hydration: 'Hydration',
      },
      categories: {
        title: 'Food categories',
        subtitle: 'Calories grouped by detected primary category.',
        empty: 'No category data available.',
      },
      history: {
        title: 'Recent history',
        subtitle: 'Latest analyses generated by the assistant.',
        defaultMeal: 'Meal',
        uncategorised: 'Uncategorised',
        meta: '{date} - {category}',
        empty: 'No meal history available yet.',
      },
    },
    notifications: {
      title: 'Unable to load nutrition data',
      message: 'Check your connection and try again.',
      created: 'Nutrition entry created successfully.',
      updated: 'Nutrition entry updated successfully.',
      deleted: 'Nutrition entry deleted successfully.',
      deleteError: 'We could not delete this entry. Try again.',
      saveError: 'We could not save this entry. Try again.',
      forbidden: 'You are not allowed to manage this entry.',
      selectClient: 'Select a patient to manage entries.',
      usersError: 'Unable to load patients. Try again.',
      categoriesError: 'Unable to load food categories.',
      unitsError: 'Unable to load measurement units.',
    },
    modal: {
      title: {
        create: 'Create nutrition',
        edit: 'Edit nutrition',
      },
      subtitle: {
        create: 'Record a manual WhatsApp nutrition insight.',
        edit: 'Update the selected WhatsApp nutrition entry.',
      },
      owner: 'Owner: {owner}',
      fields: {
        receivedAt: 'Received at',
        meal: 'Meal',
        food: 'Food',
        customFood: 'Custom food name',
        foodName: 'Food name',
        calories: 'Calories',
        protein: 'Protein',
        carbs: 'Carbohydrates',
        fat: 'Fat',
        liquidVolume: 'Liquid volume',
        summary: 'Summary',
        textContent: 'Message text',
        imageUrl: 'Image URL',
        primaryCategory: 'Primary category',
      },
      options: {
        noMeal: 'No meal',
        noFood: 'Select food',
        customFood: 'Add new food',
        noCategory: 'No category',
      },
      actions: {
        create: 'Create',
        update: 'Save changes',
        upload: 'Upload image',
        removeImage: 'Remove image',
      },
    },
    common: {
      unknownDate: 'Unknown date',
    },
  },
  layout: {
    settings: 'Settings',
    profile: 'Profile',
    logout: 'Sign out',
    logoutNotification: {
      title: 'Signed out',
      message: 'You have been logged out.',
    },
    help: {
      title: 'Need help?',
      description: 'Read the implementation guide to integrate the Java backend endpoints.',
      action: 'View documentation',
    },
  },
  preferences: {
    language: {
      label: 'Language',
      english: 'English',
      portuguese: 'Portuguese',
    },
  },
  users: {
    empty: 'No patients found.',
    title: 'Patients',
    subtitle: 'Manage patient records and information.',
  },
};

